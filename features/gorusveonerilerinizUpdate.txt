# Prompt: PideByPide "Görüş ve Önerileriniz" Sayfası Revizyonu

```markdown
# PideByPide "Görüş ve Önerileriniz" Sayfası Revizyonu

## Görev Tanımı
Mevcut `temp copy\gorus-ve-onerileriniz.html` dosyasını içerik ve tasarım unsurlarını koruyarak Next.js yapısına uygun şekilde revize et. Sayfa aynı işlevselliğe sahip olacak: kullanıcıların görüş, öneri ve şikayetlerini iletebilecekleri bir form içerecek.

## Sayfa Yapısı
Yeni dosya yolu: `src/app/gorus-ve-onerileriniz/page.tsx`
URL: `/gorus-ve-onerileriniz`

## Mevcut Durum ve Kaynaklar
1. `temp copy\gorus-ve-onerileriniz.html`: Eski web sitesinden alınan, korunacak içerik ve tasarım elementlerini içeren HTML
2. Form yapısı ve işlevselliği korunacak
3. Meta verileri: Başlık ve açıklama mevcut HTML'den alınmalı

## Sayfa Yapısı Analizi
Mevcut HTML sayfası iki ana bölüme ayrılmış:
1. **Sol taraf**: Açıklayıcı bilgiler ve kategoriler (Memnuniyet, Öneri, Şikayet, Genel Görüş)
2. **Sağ taraf**: Kullanıcıların doldurması gereken form

Form alanları şunları içerir:
- Ad Soyad (zorunlu)
- E-posta 
- Telefon
- Şube seçimi
- Konu seçimi (zorunlu)
- Mesaj (zorunlu)
- Memnuniyet puanı (1-5)
- KVKK onayı (zorunlu)
- reCAPTCHA
- Gönder butonu

## Teknik İyileştirme Gereksinimleri

### 1. Metadata Optimizasyonu
```tsx
export const metadata = {
  title: 'Görüş ve Önerileriniz - Pide By Pide',
  description: 'Görüş ve önerilerinizi bizimle paylaşın. Müşteri memnuniyet formu.',
  keywords: 'Görüş öneri, müşteri memnuniyet formu, şikayet, öneri'
};
```

### 2. Form State ve Validasyon için React Hook Form
```tsx
import { useForm } from 'react-hook-form';

type FormData = {
  ad_soyad: string;
  email: string;
  telefon: string;
  sube: string;
  konu: string;
  mesaj: string;
  puan: string;
  kvkk: boolean;
};
```

### 3. reCAPTCHA Entegrasyonu
```tsx
import ReCAPTCHA from "react-google-recaptcha";

// Component içinde
const [captchaValue, setCaptchaValue] = useState<string | null>(null);

const handleCaptchaChange = (value: string | null) => {
  setCaptchaValue(value);
};
```

## Ana Sayfa Bileşeni
```tsx
// src/app/gorus-ve-onerileriniz/page.tsx
'use client';

import { useState } from 'react';
import { useForm } from 'react-hook-form';
import Link from 'next/link';
import ReCAPTCHA from 'react-google-recaptcha';

// Form veri tipi
type FormData = {
  ad_soyad: string;
  email: string;
  telefon: string;
  sube: string;
  konu: string;
  mesaj: string;
  puan: string;
  kvkk: boolean;
};

export default function GorusOneriPage() {
  const { register, handleSubmit, formState: { errors } } = useForm<FormData>();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [submitError, setSubmitError] = useState('');
  const [captchaValue, setCaptchaValue] = useState<string | null>(null);

  const handleCaptchaChange = (value: string | null) => {
    setCaptchaValue(value);
  };

  const onSubmit = async (data: FormData) => {
    if (!captchaValue) {
      setSubmitError('Lütfen robot olmadığınızı doğrulayın.');
      return;
    }

    setIsSubmitting(true);
    setSubmitError('');

    try {
      // API endpoint olacak
      const response = await fetch('/api/gorus-ve-onerileriniz', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          ...data,
          captcha: captchaValue,
        }),
      });

      const result = await response.json();

      if (response.ok) {
        setSubmitSuccess(true);
        window.scrollTo(0, 0);
      } else {
        setSubmitError(result.message || 'Gönderim sırasında bir hata oluştu.');
      }
    } catch (error) {
      setSubmitError('Gönderim sırasında bir hata oluştu. Lütfen daha sonra tekrar deneyin.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <main className="min-h-screen bg-gray-50">
      {/* Hero Bölümü */}
      <section className="bg-primary-50 py-12 md:py-20">
        <div className="container mx-auto px-4">
          <h1 className="text-3xl md:text-4xl lg:text-5xl font-extrabold text-[#14543c] text-center mb-4">
            GÖRÜŞ VE ÖNERİLERİNİZ
          </h1>
          <nav className="flex justify-center" aria-label="Breadcrumb">
            <ol className="flex items-center space-x-2 text-sm text-gray-500">
              <li>
                <Link href="/" className="hover:text-[#f29b24]">Anasayfa</Link>
              </li>
              <li>
                <span className="mx-2">/</span>
              </li>
              <li className="font-medium text-gray-700">Görüş ve Önerileriniz</li>
            </ol>
          </nav>
        </div>
      </section>

      {/* İçerik Bölümü */}
      <div className="container mx-auto px-4 py-12">
        {submitSuccess ? (
          <div className="bg-green-50 border-l-4 border-green-500 p-4 mb-6 rounded">
            <div className="flex">
              <div className="flex-shrink-0">
                <svg className="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </div>
              <div className="ml-3">
                <h3 className="text-lg font-medium text-green-800">Teşekkürler!</h3>
                <div className="mt-2 text-green-700">
                  <p>Görüş ve önerileriniz başarıyla gönderildi. Değerlendirmeleriniz için teşekkür ederiz.</p>
                </div>
                <div className="mt-4">
                  <button
                    type="button"
                    onClick={() => setSubmitSuccess(false)}
                    className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors"
                  >
                    Yeni Görüş Bildir
                  </button>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="p-6 md:p-8">
              <div className="grid grid-cols-1 lg:grid-cols-12 gap-8">
                {/* Sol Taraf - Açıklamalar */}
                <div className="lg:col-span-7">
                  <h2 className="text-2xl font-bold text-[#14543c] mb-4">Fikirleriniz Bizim İçin Değerli</h2>
                  <p className="text-gray-700 mb-6">
                    Pide By Pide olarak müşteri memnuniyeti bizim için en önemli önceliklerden biridir. 
                    Hizmet kalitemizi sürekli iyileştirmek ve sizlere daha iyi deneyimler sunabilmek için 
                    görüş, öneri ve değerlendirmelerinizi bekliyoruz.
                  </p>
                  
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6">
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <h3 className="flex items-center text-lg font-bold text-[#f29b24] mb-2">
                        <svg className="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                        Memnuniyet
                      </h3>
                      <p className="text-gray-600">Beğendiğiniz hizmetleri bizimle paylaşın. Olumlu geri bildirimleriniz ekibimizi motive ediyor.</p>
                    </div>
                    
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <h3 className="flex items-center text-lg font-bold text-[#14543c] mb-2">
                        <svg className="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path d="M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z" />
                        </svg>
                        Öneri
                      </h3>
                      <p className="text-gray-600">Daha iyi hizmet verebilmemiz için önerilerinizi paylaşın. Her fikir bizim için değerlidir.</p>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <h3 className="flex items-center text-lg font-bold text-[#f29b24] mb-2">
                        <svg className="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                        </svg>
                        Şikayet
                      </h3>
                      <p className="text-gray-600">Yaşadığınız olumsuzlukları bildirin. Sorunları hızla çözmek için çalışıyoruz.</p>
                    </div>
                    
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <h3 className="flex items-center text-lg font-bold text-[#14543c] mb-2">
                        <svg className="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clipRule="evenodd" />
                        </svg>
                        Genel Görüş
                      </h3>
                      <p className="text-gray-600">Hizmetlerimiz hakkındaki genel görüşlerinizi bizimle paylaşın.</p>
                    </div>
                  </div>
                </div>
                
                {/* Sağ Taraf - Form */}
                <div className="lg:col-span-5">
                  <div className="bg-[#14543c] rounded-t-lg">
                    <h3 className="text-white text-xl font-bold py-3 px-4">Görüş ve Öneri Formu</h3>
                  </div>
                  
                  <div className="border border-gray-200 rounded-b-lg p-4">
                    {submitError && (
                      <div className="bg-red-50 border-l-4 border-red-500 p-4 mb-4 rounded">
                        <div className="flex">
                          <div className="flex-shrink-0">
                            <svg className="h-5 w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                              <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                            </svg>
                          </div>
                          <div className="ml-3">
                            <p className="text-sm text-red-700">{submitError}</p>
                          </div>
                        </div>
                      </div>
                    )}
                    
                    <form onSubmit={handleSubmit(onSubmit)}>
                      <div className="mb-4">
                        <label htmlFor="ad_soyad" className="block mb-2 text-sm font-medium text-gray-700">Ad Soyad *</label>
                        <input
                          type="text"
                          id="ad_soyad"
                          className={`w-full px-3 py-2 border ${errors.ad_soyad ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]`}
                          {...register('ad_soyad', { required: 'Ad Soyad alanı zorunludur' })}
                        />
                        {errors.ad_soyad && <p className="mt-1 text-sm text-red-600">{errors.ad_soyad.message}</p>}
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="email" className="block mb-2 text-sm font-medium text-gray-700">E-posta</label>
                        <input
                          type="email"
                          id="email"
                          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]"
                          {...register('email', { 
                            pattern: { 
                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i, 
                              message: 'Geçerli bir e-posta adresi giriniz' 
                            } 
                          })}
                        />
                        {errors.email && <p className="mt-1 text-sm text-red-600">{errors.email.message}</p>}
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="telefon" className="block mb-2 text-sm font-medium text-gray-700">Telefon</label>
                        <input
                          type="tel"
                          id="telefon"
                          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]"
                          {...register('telefon')}
                        />
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="sube" className="block mb-2 text-sm font-medium text-gray-700">Şube</label>
                        <select
                          id="sube"
                          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]"
                          {...register('sube')}
                        >
                          <option value="">Şube Seçiniz</option>
                          <option value="İzmir Bayraklı">İzmir Bayraklı</option>
                          <option value="İzmir Edremit">İzmir Edremit</option>
                          <option value="Ankara">Ankara</option>
                          <option value="İstanbul">İstanbul</option>
                          <option value="Genel">Genel</option>
                        </select>
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="konu" className="block mb-2 text-sm font-medium text-gray-700">Konu *</label>
                        <select
                          id="konu"
                          className={`w-full px-3 py-2 border ${errors.konu ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]`}
                          {...register('konu', { required: 'Konu seçimi zorunludur' })}
                        >
                          <option value="">Konu Seçiniz</option>
                          <option value="Memnuniyet">Memnuniyet</option>
                          <option value="Öneri">Öneri</option>
                          <option value="Şikayet">Şikayet</option>
                          <option value="Genel Görüş">Genel Görüş</option>
                        </select>
                        {errors.konu && <p className="mt-1 text-sm text-red-600">{errors.konu.message}</p>}
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="mesaj" className="block mb-2 text-sm font-medium text-gray-700">Mesajınız *</label>
                        <textarea
                          id="mesaj"
                          rows={6}
                          className={`w-full px-3 py-2 border ${errors.mesaj ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]`}
                          placeholder="Görüş ve önerilerinizi buraya yazabilirsiniz..."
                          {...register('mesaj', { required: 'Mesaj alanı zorunludur' })}
                        ></textarea>
                        {errors.mesaj && <p className="mt-1 text-sm text-red-600">{errors.mesaj.message}</p>}
                      </div>
                      
                      <div className="mb-4">
                        <label htmlFor="puan" className="block mb-2 text-sm font-medium text-gray-700">Genel Memnuniyet (1-5)</label>
                        <select
                          id="puan"
                          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-[#f29b24] focus:border-[#f29b24]"
                          {...register('puan')}
                        >
                          <option value="">Puan Veriniz</option>
                          <option value="5">5 - Çok Memnun</option>
                          <option value="4">4 - Memnun</option>
                          <option value="3">3 - Orta</option>
                          <option value="2">2 - Memnun Değil</option>
                          <option value="1">1 - Hiç Memnun Değil</option>
                        </select>
                      </div>
                      
                      <div className="mb-4">
                        <div className="flex items-start">
                          <div className="flex items-center h-5">
                            <input
                              type="checkbox"
                              id="kvkk"
                              className={`h-4 w-4 text-[#14543c] border ${errors.kvkk ? 'border-red-500' : 'border-gray-300'} rounded focus:ring-[#f29b24]`}
                              {...register('kvkk', { required: 'KVKK aydınlatma metnini kabul etmelisiniz' })}
                            />
                          </div>
                          <div className="ml-3 text-sm">
                            <label htmlFor="kvkk" className={`font-medium ${errors.kvkk ? 'text-red-700' : 'text-gray-700'}`}>
                              <Link href="/kisisel-verilerin-korunmasi" target="_blank" className="text-[#14543c] underline">KVKK Aydınlatma Metni</Link>'ni okudum ve kabul ediyorum.
                            </label>
                            {errors.kvkk && <p className="mt-1 text-sm text-red-600">{errors.kvkk.message}</p>}
                          </div>
                        </div>
                      </div>
                      
                      <div className="mb-4">
                        <ReCAPTCHA
                          sitekey="6LdnK4IaAAAAAF8dCYxS9oMNMEq5jjHxZOB--4-k"
                          onChange={handleCaptchaChange}
                        />
                        {submitError && submitError.includes('robot') && (
                          <p className="mt-1 text-sm text-red-600">Robot olmadığınızı doğrulayın</p>
                        )}
                      </div>
                      
                      <button
                        type="submit"
                        disabled={isSubmitting}
                        className="w-full bg-[#14543c] text-white py-3 px-6 rounded-md font-medium hover:bg-[#0f3d2a] focus:outline-none focus:ring-2 focus:ring-[#f29b24] focus:ring-opacity-50 transition-colors"
                      >
                        {isSubmitting ? 'GÖNDERİLİYOR...' : 'GÖNDER'}
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </main>
  );
}
```

## API Route Bileşeni
```tsx
// src/app/api/gorus-ve-onerileriniz/route.ts
import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

export async function POST(req: NextRequest) {
  try {
    const data = await req.json();
    const { ad_soyad, email, telefon, sube, konu, mesaj, puan, kvkk, captcha } = data;

    // Form doğrulama
    if (!ad_soyad || !konu || !mesaj || !kvkk) {
      return NextResponse.json(
        { success: false, message: 'Lütfen zorunlu alanları doldurun.' },
        { status: 400 }
      );
    }

    // reCAPTCHA doğrulama (gerçek bir uygulama için Google reCAPTCHA API'si kullanılmalıdır)
    if (!captcha) {
      return NextResponse.json(
        { success: false, message: 'Lütfen robot olmadığınızı doğrulayın.' },
        { status: 400 }
      );
    }

    // E-posta için içerik oluştur
    const emailContent = `
      <h2>Yeni Görüş ve Öneri</h2>
      <p><strong>Ad Soyad:</strong> ${ad_soyad}</p>
      <p><strong>E-posta:</strong> ${email || 'Belirtilmemiş'}</p>
      <p><strong>Telefon:</strong> ${telefon || 'Belirtilmemiş'}</p>
      <p><strong>Şube:</strong> ${sube || 'Belirtilmemiş'}</p>
      <p><strong>Konu:</strong> ${konu}</p>
      <p><strong>Mesaj:</strong> ${mesaj}</p>
      <p><strong>Memnuniyet Puanı:</strong> ${puan || 'Belirtilmemiş'}</p>
      <p><strong>Gönderim Zamanı:</strong> ${new Date().toLocaleString('tr-TR')}</p>
    `;

    // Nodemailer transporter yapılandırması
    const transporter = nodemailer.createTransport({
      host: 'smtp.office365.com',
      port: 587,
      secure: false, // TLS için false
      auth: {
        user: 'admin@pidebypide.com',
        pass: 'XxnbDfHJ6cqx#7t5'
      },
    });

    // E-posta gönderimi
    await transporter.sendMail({
      from: '"Pide By Pide Web Sitesi" <admin@pidebypide.com>',
      to: 'info@pidebypide.com', // Alıcı e-posta adresi
      replyTo: email || 'no-reply@pidebypide.com',
      subject: `Yeni Görüş ve Öneri: ${konu}`,
      html: emailContent,
    });

    return NextResponse.json({
      success: true,
      message: 'Görüş ve önerileriniz başarıyla gönderildi. Teşekkür ederiz.',
    });
    
  } catch (error) {
    console.error('Görüş ve öneri gönderme hatası:', error);
    return NextResponse.json(
      { success: false, message: 'İşleminiz sırasında bir hata oluştu. Lütfen daha sonra tekrar deneyin.' },
      { status: 500 }
    );
  }
}
```

## Gerekli Paketlerin Kurulumu
```bash
npm install react-hook-form react-google-recaptcha nodemailer
npm install --save-dev @types/react-google-recaptcha @types/nodemailer
```

## Önemli Notlar ve Talimatlar

1. **Form Validasyonu**:
   - Gerekli alanlar için uygun validasyonlar eklenmiştir
   - react-hook-form ile form state yönetimi sağlanmıştır
   - Hata mesajları kullanıcı dostu şekilde gösterilmektedir

2. **reCAPTCHA Entegrasyonu**:
   - Google reCAPTCHA v2 kullanılmaktadır
   - Gerçek sitekey'in güncellenmesi gerekebilir
   - reCAPTCHA validasyonu hem client hem de server tarafında yapılıyor

3. **Görsel Tasarım**:
   - Kurumsal renkler kullanılmıştır (#14543c yeşil ve #f29b24 turuncu)
   - Responsive tasarım, mobil uyumlu grid yapısı
   - İkonlar ve görsel elementlerle kullanıcı deneyimi zenginleştirilmiştir

4. **E-posta Gönderimi**:
   - Nodemailer ile güvenli SMTP gönderimi
   - Yapılandırılmış HTML formatında e-posta içeriği
   - Güvenlik: SMTP bilgileri environment variables üzerinden alınmalıdır

5. **Erişilebilirlik**:
   - Tüm form alanlarının uygun label'ları vardır
   - Hata durumları ekran okuyucular için uygun şekilde işaretlenmiştir
   - Tab sıralaması mantıklı bir akışa sahiptir

6. **Güvenlik Önlemleri**:
   - Form verilerinin istemci ve sunucu taraflı doğrulaması
   - reCAPTCHA ile bot koruması
   - KVKK uyumluluğu için onay kutusu

Bu prompt ile "Görüş ve Önerileriniz" sayfasını orijinal içeriği ve tasarım unsurlarını koruyarak Next.js yapısına uyarlamalı ve modern özelliklerle zenginleştirmelisin. Ayrıca form gönderimlerini işlemek için gerekli API endpoint'i ve e-posta gönderim işlevselliği de dahil edilmiştir.